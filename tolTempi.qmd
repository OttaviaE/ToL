---
title: "ToL Pianificazione"
subtitle: "Riunione PRIN"
date: 2023-04-13
author: "Ottavia"
format: 
  html: 
    toc: true
    toc-location: right
    toc-depth: 4
execute: 
  eval: true
  echo: false
  warning: false
  message: false
editor_options: 
  chunk_output_type: console
layout: full
---


```{r include = FALSE}
library(ggplot2)
library(dplyr)
library(patchwork)
library(knitr)
# DATA PREPARATION -----
guide = read.csv("guida_tol.csv",
                 header = T, sep = ",")
data43 = read.csv("data/tol43_2023_04_11.csv", header = T, sep = ",")
data43 = merge(data43, guide)
data43$code = 43
data45 = read.csv("data/tol45_2023_04_11.csv", header = T, sep = ",")
data45 = merge(data45, guide)
data45$code = 45
data52 = read.csv("data/tol52_2023_04_11.csv", header = T, sep = ",")
data52 = merge(data52, guide)
data52$code = 52

data = rbind(data43, data45, data52)
# table(data$code)
# table(data$external_code)


data = data[!data$external_code %in% c("PROVA", "prova", "Prova"),]
data$correct = ifelse(data$task_success == "True", 1, 0)
# COMPUTE PIANFICATION TIME -----
data$start_time = as.POSIXct(data$start_time, format = "%Y-%m-%d %H:%M:%S")
data$first_move_time = as.POSIXct(data$first_move_time, 
                                  format = "%Y-%m-%d %H:%M:%S")
data$pianification = difftime(data$first_move_time, 
                               data$start_time, 
                               units = "secs")

sbj_char = data[, c("id", "diagnostic", "gender", "anni_scolarita", "code")]
sbj_char = sbj_char %>% distinct()

for (i in 1:length(unique(unique(sbj_char$code)))){
  
  assign(paste0("sbj_char",unique(sbj_char$code)[i]), 
         sbj_char[sbj_char$code %in% unique(sbj_char$code)[i],])
}
# table(sbj_char43$anni_scolarita)
# nrow(sbj_char43)
# table(sbj_char45$anni_scolarita)
# table(sbj_char52$anni_scolarita)

groups_tot = sbj_char %>%  
  group_by(code) 

n_groups = groups_tot %>%  
  summarise(n.tot = n())






```


# Nota iniziale 

Data 43: Bambini 4-8 anni 

Data 45: Bambini e adulti 14+

Data 52: Bambini 9-13

```{r}
sbj_char %>% 
  group_by(code, gender) %>%  
  summarise(n = n()) %>% 
  left_join(n_groups) %>%  
  mutate(prop = round(n/n.tot, 2)) %>%  
  kable(align = "c", caption = "Proporzione per genere nei diversi gruppi")
```


<!-- # Literature review  -->

<!-- Scopus:  -->

<!--       ( TITLE-ABS-KEY ( "tower of london" )  AND   -->

<!--       TITLE-ABS-KEY ( "plan*" )  AND   -->

<!--       TITLE-ABS-KEY ( "age-related" ) )  -->


<!-- Risulta in 18 paper -->



# Item pianfication and correct responses

```{r}
item_correct =data %>%  
  group_by(id_question, code) %>% 
  summarise(prop = mean(correct))


item_time = data %>%  
  group_by(id_question, code) %>% 
  summarise(mean.p = mean(pianification, na.rm = T), sd.p = sd(pianification, na.rm = T))


item_char = merge(item_correct, 
                  item_time)
item_char = merge(item_char, guide)
item_char$npercorsi = as.factor(item_char$npercorsi)
for (i in 1:length(unique(unique(item_char$code)))){
  assign(paste0("item_char",unique(item_char$code)[i]), 
         item_char[item_char$code %in% unique(item_char$code)[i],])
}

```



## 43 

```{r}
item_char43$lab = (round(item_char43$prop, 2))
item_char43$col.lab = ifelse(item_char43$prop < .50, 
                             "blue", "black") 
ggplot(item_char43, 
       aes(x = reorder(id_question, prop), 
           y = as.numeric(mean.p), 
           size = nmosse, 
           shape = npercorsi)) + geom_point() + theme_light()+ 
  ylab("Pianification time (seconds)") + xlab("Item (Proportion correct)") + ggtitle(paste0("data ", item_char43$code[1])) + 
  scale_x_discrete(labels = c(round(item_char43[order(item_char43$prop), "prop"], 2))) + theme(
    legend.position = "bottom", 
    axis.text.x=element_text(colour=item_char43[order(item_char43$prop), "col.lab"], size = 18, angle = 90), 
    axis.title = element_text(size = 18), 
    legend.text = element_text(size = 18), 
    axis.text = element_text(size = 18)
  ) 






```



## 52

```{r}
item_char52$col.lab = ifelse(item_char52$prop < .50, 
                             "blue", "black")
ggplot(item_char52, 
       aes(x = reorder(id_question, prop), 
           y = as.numeric(mean.p), 
           size = nmosse, 
           shape = npercorsi)) + geom_point() + theme_light()+ 
  ylab("Pianification time (seconds)") + xlab("Item (Proportion correct)") + ggtitle(paste0("data ", 
                                                                       item_char52$code[1])) + 
  scale_x_discrete(labels = c(round(item_char52[order(item_char52$prop), "prop"], 2))) + theme(
     legend.position = "bottom", 
    axis.text.x=element_text(colour=item_char52[order(item_char52$prop), "col.lab"], size = 18, angle = 90), 
    
    axis.title = element_text(size = 18), 
    legend.text = element_text(size = 18), 
    axis.text = element_text(size = 18)
  ) + guides(size = guide_legend(nrow = 1))
```



## 45 


```{r out.width="100%"}
item_char45$col.lab = ifelse(item_char45$prop < .50, 
                             "blue", "black")
ggplot(item_char45, 
       aes(x = reorder(id_question, prop), 
           y = as.numeric(mean.p), 
           size = nmosse, 
           shape = npercorsi)) + geom_point() + theme_light()+ 
  ylab("Pianification time (seconds)") + xlab("Item (Proportion correct)") + ggtitle(paste0("data ", item_char45$code[1])) + 
  scale_x_discrete(labels = c(round(item_char45[order(item_char45$prop), "prop"], 2))) + theme(
     legend.position = "bottom", 
    axis.text.x=element_text(colour=item_char45[order(item_char45$prop), "col.lab"], size = 18, angle = 90),
    
    axis.title = element_text(size = 18), 
    legend.text = element_text(size = 18), 
    axis.text = element_text(size = 18)
  ) 


```


# Pianification, correct vs. error response


```{r}
item_time_ce = data[!data$task_success %in% "NULL", ] %>%  
  group_by(id_question, task_success, code) %>% 
  summarise(mean.p = mean(pianification, na.rm = T), sd.p = sd(pianification, na.rm = T))

item_time_ce = merge(item_time_ce, guide)
item_time_ce = merge(item_time_ce, item_correct)
item_time_ce$npercorsi = as.factor(item_time_ce$npercorsi)
for (i in 1:length(unique(unique(item_time_ce$code)))){
  assign(paste0("item_time_ce",unique(item_time_ce$code)[i]), 
         item_time_ce[item_time_ce$code %in% unique(item_time_ce$code)[i],])
}

```

## Divisione in quartili 

```{r}
cut.off = as.data.frame(aggregate(prop ~ code, item_char, quantile))
cut.off.prop = data.frame(cut.off$prop)
dimnames(cut.off.prop)[[1]] = cut.off$code

temp = NULL
item_ce_quartile = NULL

for (i in 1:length(unique(unique(cut.off$code)))){
  temp = item_time_ce[item_time_ce$code %in% unique(cut.off$code)[i], ]
  temp$item.diff = ifelse(temp$prop < cut.off.prop[1, 2], 
                          "molto.difficili", 
                          ifelse(temp$prop > cut.off.prop[1, 2] & temp$prop < cut.off.prop[1, 3], 
                                 "medio.difficili", 
                                 ifelse(temp$prop > cut.off.prop[1, 3] & temp$prop < cut.off.prop[1, 4], 
                                        "medio.facili", 
                                        "molto.facili")))
  item_ce_quartile = rbind(item_ce_quartile, temp)
  assign(paste0("item_ce_quartile",unique(cut.off$code)[i]), 
         temp)
}




summary_ce_quartile = item_ce_quartile %>%  
  group_by(code, task_success, item.diff) %>%  
  summarise(mean_pian = mean(mean.p), sd_pian = sd(sd.p))

summary_ce_quartile$item.diff = factor(summary_ce_quartile$item.diff, 
                                       levels = c("molto.difficili", 
                                                  "medio.difficili", 
                                                  "medio.facili", 
                                                  "molto.facili"))
summary_ce_quartile$code = factor(summary_ce_quartile$code, 
                                  levels = c("43", "52", "45")) 



for (i in 1:length(unique(unique(summary_ce_quartile$code)))){
  assign(paste0("summary_ce_quartile",unique(summary_ce_quartile$code)[i]), 
         summary_ce_quartile[summary_ce_quartile$code %in% unique(summary_ce_quartile$code)[i], ])
}

```

### 43 

```{r}
ggplot(summary_ce_quartile43, 
       aes(x = item.diff, 
           y = as.numeric(mean_pian), color = task_success, 
           linetype = task_success, 
           group = task_success, 
           shape = task_success)) + geom_point(size = 3) + geom_line(aes(y = mean_pian), size = 1) +
  facet_wrap(~code) + 
  theme_light() + ylab("Mean planning time (secs)") + 
  xlab("") + 
  theme(axis.text.x = element_text(angle = 90), 
        axis.title = element_text(size = 18), 
        axis.text = element_text(size = 18), 
        legend.position = "bottom", 
        legend.text = element_text(size = 18))
```

### 52
```{r}
ggplot(summary_ce_quartile52, 
       aes(x = item.diff, 
           y = as.numeric(mean_pian), color = task_success, 
           linetype = task_success, 
           group = task_success, 
           shape = task_success)) + geom_point(size = 3) + geom_line(aes(y = mean_pian), size = 1) +
  facet_wrap(~code) + 
  theme_light() + ylab("Mean planning time (secs)") + 
  xlab("") + 
  theme(axis.text.x = element_text(angle = 90), 
        axis.title = element_text(size = 18), 
        axis.text = element_text(size = 18), 
        legend.position = "bottom", 
        legend.text = element_text(size = 18))
```

### 45 

```{r}
ggplot(summary_ce_quartile45, 
       aes(x = item.diff, 
           y = as.numeric(mean_pian), color = task_success, 
           linetype = task_success, 
           group = task_success, 
           shape = task_success)) + geom_point(size = 3) + geom_line(aes(y = mean_pian), size = 1) +
  facet_wrap(~code) + 
  theme_light() + ylab("Mean planning time (secs)") + 
  xlab("") + 
  theme(axis.text.x = element_text(angle = 90), 
        axis.title = element_text(size = 18), 
        axis.text = element_text(size = 18), 
        legend.position = "bottom", 
        legend.text = element_text(size = 18))
```



### Con le rispettive deviazoni standard: 

```{r}
ggplot(summary_ce_quartile, 
       aes(x = item.diff, 
           y = as.numeric(mean_pian), color = task_success, 
           linetype = task_success, 
           group = task_success, 
           shape = task_success)) + geom_point(size = 3) + geom_line(aes(y = mean_pian), size = 1) + 
  
  geom_errorbar(aes(x = item.diff, 
                    ymin = mean_pian - sd_pian, 
                    ymax = mean_pian + sd_pian), 
                width = .2) +
  facet_wrap(~code) + 
  theme_light() + ylab("Mean planning time (secs)") + 
  xlab("") + 
  theme(axis.text.x = element_text(angle = 90), 
        axis.title = element_text(size = 18), 
        axis.text = element_text(size = 18), 
        legend.position = "bottom", 
        legend.text = element_text(size = 18))
```

## Dettaglio sui singoli Item

### 43 

```{r}

item_time_ce43$npercorsi = as.factor(item_time_ce43$npercorsi)
ggplot(item_time_ce43, 
       aes(x = reorder(id_question, prop), 
           y = as.numeric(mean.p), color = task_success, 
           shape = npercorsi,
           group = task_success, linetype = task_success)) + 
  geom_point(aes(size =  nmosse)) + 
  geom_line(aes(y = as.numeric(mean.p), 
                color = task_success), size = 1) + theme_light() + 
  xlab("Item") + ylab("Pianfication Time") +ggtitle(paste0("data ", 
                                                           item_time_ce43$code[1])) + 
  scale_x_discrete(labels = c(round(item_char43[order(item_char43$prop), "prop"], 2))) + 
  theme(
    legend.position = "bottom",
    axis.title = element_text(size = 18), 
    legend.text = element_text(size = 18),
    axis.text.x = element_text(angle = 90),
    axis.text = element_text(size = 18), 
    legend.title = element_blank()
    
  )


# ggplot(item_time_ce43, 
#        aes(x = reorder(id_question, prop), 
#            y = as.numeric(mean.p), color = task_success, 
#            shape = as.factor(npercorsi),
#            group = task_success)) + 
#   geom_point(aes(size =  nmosse))  + 
#   geom_line(aes(y = as.numeric(mean.p), 
#                 color = task_success)) + theme_light() + 
#   xlab("Item") + ylab("Pianfication Time") +ggtitle(paste0("data ", 
#                                                            item_time_ce43$code[1])) + 
#   geom_errorbar(aes(x =  reorder(id_question, prop), 
#                     ymin = as.numeric(mean.p) - as.numeric(sd.p), 
#                     ymax = as.numeric(mean.p) + as.numeric(sd.p))) 
# 


```

### 45 

```{r}
item_time_ce45$npercorsi = as.factor(item_time_ce45$npercorsi)
ggplot(item_time_ce45, 
       aes(x = reorder(id_question, prop), 
           y = as.numeric(mean.p), color = task_success, 
           shape = npercorsi,
           group = task_success, linetype = task_success)) + 
  geom_point(aes(size =  nmosse)) +
  geom_line(aes(y = as.numeric(mean.p), 
                color = task_success), size = 1) + theme_light() + 
  xlab("Item") + ylab("Pianfication Time") +ggtitle(paste0("data ", 
                                                           item_time_ce45$code[1])) + 
  scale_x_discrete(labels = c(round(item_char45[order(item_char45$prop), "prop"], 2))) + 
  theme(
    legend.position = "bottom",
    axis.title = element_text(size = 18), 
    legend.text = element_text(size = 18),
    axis.text.x = element_text(angle = 90),
    axis.text = element_text(size = 18), 
    legend.title = element_blank()
    
  )

# ggplot(item_time_ce45, 
#        aes(x = reorder(id_question, prop), 
#            y = as.numeric(mean.p), color = task_success, group = task_success)) + 
#   geom_point(size = 2) + 
#   geom_line(aes(y = as.numeric(mean.p), 
#                 color = task_success)) + theme_light() + 
#   xlab("Item") + ylab("Pianfication Time") +ggtitle(paste0("data ", 
#                                                            item_time_ce45$code[1])) + 
#   geom_errorbar(aes(x =  reorder(id_question, prop), 
#                     ymin = as.numeric(mean.p) - as.numeric(sd.p), 
#                     ymax = as.numeric(mean.p) + as.numeric(sd.p))) 





```

### 52 

```{r}
item_time_ce52$npercorsi = as.factor(item_time_ce52$npercorsi)
ggplot(item_time_ce52, 
       aes(x = reorder(id_question, prop), 
           y = as.numeric(mean.p), color = task_success, 
           shape = npercorsi,
           group = task_success, linetype = task_success)) + 
  geom_point(aes(size =  nmosse)) + 
  geom_line(aes(y = as.numeric(mean.p), 
                color = task_success), size = 1) + theme_light() + 
  xlab("Item") + ylab("Pianfication Time") +ggtitle(paste0("data ", 
                                                           item_time_ce52$code[1])) + 
  scale_x_discrete(labels = c(round(item_char52[order(item_char52$prop), "prop"], 2))) + theme(
    axis.text.x = element_text(angle = 90)
  ) + 
  theme(
    legend.position = "bottom",
    axis.title = element_text(size = 18), 
    legend.text = element_text(size = 18),
    axis.text.x = element_text(angle = 90),
    axis.text = element_text(size = 18), 
    legend.title = element_blank()
    
  )



# ggplot(item_time_ce52, 
#        aes(x = reorder(id_question, prop), 
#            y = as.numeric(mean.p), color = task_success, group = task_success)) + 
#   geom_point(size = 2) + 
#   geom_line(aes(y = as.numeric(mean.p), 
#                 color = task_success)) + theme_light() + 
#   xlab("Item") + ylab("Pianfication Time") +ggtitle(paste0("data ", 
#                                                            item_time_ce52$code[1])) + 
#   geom_errorbar(aes(x =  reorder(id_question, prop), 
#                     ymin = as.numeric(mean.p) - as.numeric(sd.p), 
#                     ymax = as.numeric(mean.p) + as.numeric(sd.p))) 

```




# Numero di mosse

```{r}
item_ce_mosse =  item_time_ce %>% 
  group_by(task_success, nmosse, code) %>% 
  summarize(mean.p = mean(mean.p))

for (i in 1:length(unique(unique(item_ce_mosse$code)))){
  assign(paste0("item_ce_mosse",unique(item_ce_mosse$code)[i]), 
         item_ce_mosse[item_ce_mosse$code %in% unique(item_ce_mosse$code)[i],])
}

```


## 43 

```{r}
item_ce_mosse43$nmosse = factor(item_ce_mosse43$nmosse)
ggplot(item_ce_mosse43, 
       aes(x = nmosse, 
           y = as.numeric(mean.p), color = task_success, 
           group = task_success)) + 
  geom_point(size = 3) + 
  geom_line(aes(y = as.numeric(mean.p), 
                color = task_success, 
                linetype = task_success), 
            size = 1) + theme_light() + 
  xlab("N mosse") + ylab("Pianfication Time") +ggtitle(paste0("data ", 
                                                           item_ce_mosse43$code[1])) + 
  theme(axis.text = element_text(size = 18), 
        axis.title = element_text(size = 18), 
        legend.text = element_text(size = 18), 
        legend.position = "bottom")
```

## 52

```{r}
item_ce_mosse52$nmosse = factor(item_ce_mosse52$nmosse)
ggplot(item_ce_mosse52, 
       aes(x = nmosse, 
           y = as.numeric(mean.p), color = task_success, 
           group = task_success)) + 
  geom_point(size = 3) + 
  geom_line(aes(y = as.numeric(mean.p), 
                color = task_success, 
                linetype = task_success)) + theme_light() + 
  xlab("N mosse") + ylab("Pianfication Time") +ggtitle(paste0("data ", 
                                                           item_ce_mosse52$code[1])) +   theme(axis.text = element_text(size = 18), 
        axis.title = element_text(size = 18), 
        legend.text = element_text(size = 18), 
        legend.position = "bottom")
```

## 45

```{r}
item_ce_mosse45$nmosse = factor(item_ce_mosse45$nmosse)
ggplot(item_ce_mosse45, 
       aes(x = nmosse, 
           y = as.numeric(mean.p), color = task_success, 
           group = task_success)) + 
  geom_point(size = 3) + 
  geom_line(aes(y = as.numeric(mean.p), 
                color = task_success, 
                linetype = task_success)) + theme_light() + 
  xlab("N mosse") + ylab("Pianfication Time") +ggtitle(paste0("data ", 
                                                           item_ce_mosse45$code[1])) +   theme(axis.text = element_text(size = 18), 
        axis.title = element_text(size = 18), 
        legend.text = element_text(size = 18), 
        legend.position = "bottom")
```


# Proposte 

Due piani: 

1. Taglio metodologico, estensione dei modelli Markoviani (MSP1 e MSP2) ai tempi di risposta

2. Taglio applicativo: Analisi dei tempi di pianficazione considerando le diverse fasce di età 

3. Idee?